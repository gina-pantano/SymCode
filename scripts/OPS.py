#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Nov 17 16:01:47 2022

@author: ginapantano
"""

import numpy as np

syms = {
'Identity : x, y, z' :
np.array([[1,0,0],
          [0,1,0],
          [0,0,1]]),

'3+ [111] : z, x, y' :
np.array([[0,0,1],
          [1,0,0],
          [0,1,0]]),

'3- [111] : y, z, x' :
np.array([[0,1,0],
          [0,0,1],
          [1,0,0]]),

'Inversion : -x, -y, -z' :
np.array([[-1,0,0],
          [0,-1,0],
          [0,0,-1]]),

'-3+ [111] : -z -x, -y' :
np.array([[0,0,-1],
          [-1,0,0],
          [0,-1,0]]),

'-3- [111] : -y, -z, -x' :
np.array([[0,-1,0],
          [0,0,-1],
          [-1,0,0]]),

'2 [001] : -x, -y, z' :
np.array([[-1,0,0],
          [0,-1,0],
          [0,0,1]]),

'2 [010] : -x, y, -z' :
np.array([[-1,0,0],
          [0,1,0],
          [0,0,-1]]),

'2 [100] : x, -y, -z' :
np.array([[1,0,0],
          [0,-1,0],
          [0,0,-1]]),

'3+ [1-1-1] : -z, -x, y' :
np.array([[0,0,-1],
          [-1,0,0],
          [0,1,0]]),

'3- [1-1-1] : -y, z, -x' :
np.array([[0,-1,0],
          [0,0,1],
          [-1,0,0]]),

'2 [110] : y, x, -z' :
np.array([[0,1,0],
          [1,0,0],
          [0,0,-1]]),

'2 [1-10] : -y, -x, -z' :
np.array([[0,-1,0],
          [-1,0,0],
          [0,0,-1]]),

'4+ [001] : -y, x, z' :
np.array([[0,-1,0],
          [1,0,0],
          [0,0,1]]),


'4- [001] : y, -x, z' :
np.array([[0,1,0],
          [-1,0,0],
          [0,0,1]]),

'm [001] : x, y, -z' :
np.array([[1,0,0],
          [0,1,0],
          [0,0,-1]]),

'-3+ [1-1-1] : x, y, z' :
np.array([[0,0,1],
          [1,0,0],
          [0,-1,0]]),

'-3- [1-1-1] : y, -z, x' :
np.array([[0,1,0],
          [0,0,-1],
          [1,0,0]]),

'm [110] : -y, -x, z' :
np.array([[0,-1,0],
          [-1,0,0],
          [0,0,1]]),

'm [1-10] : y, x, z' :
np.array([[0,1,0],
          [1,0,0],
          [0,0,1]]),

'-4+ [001] : y, -x, -z' :
np.array([[0,1,0],
          [-1,0,0],
          [0,0,-1]]),

'-4- [001] : x, y, z' :
np.array([[0,-1,0],
          [1,0,0],
          [0,0,-1]]),

'3+ [-11-1] : z, -x, -y' :
np.array([[0,0,1],
          [-1,0,0],
          [0,-1,0]]),

'3- [-11-1] : -y, -z, x' :
np.array([[0,-1,0],
          [0,0,-1],
          [1,0,0]]),

'2 [101] : z, -y, x' :
np.array([[0,0,1],
          [0,-1,0],
          [1,0,0]]),


'2 [-101] : -z, -y, -x' :
np.array([[0,0,-1],
          [0,-1,0],
          [-1,0,0]]),

'4+ [010] : z, y, -x' :
np.array([[0,0,1],
          [0,1,0],
          [-1,0,0]]),

'4- [010] : -z, y, x' :
np.array([[0,0,-1],
          [0,1,0],
          [1,0,0]]),
 
'm [010] : x, -y, z' :
np.array([[1,0,0],
          [0,-1,0],
          [0,0,1]]),

'-3+ [-11-1] : -z, x, y' :
np.array([[0,0,-1],
          [1,0,0],
          [0,1,0]]),

'-3- [-11-1] : y, z, -x' :
np.array([[0,1,0],
          [0,0,1],
          [-1,0,0]]),

'm [101] : -z, y, -x' :
np.array([[0,0,-1],
          [0,1,0],
          [-1,0,0]]),

'm [-101] : z, y, x' :
np.array([[0,0,1],
          [0,1,0],
          [1,0,0]]),

'-4+ [010] : -z, -y, x' :
np.array([[0,0,-1],
          [0,-1,0],
          [1,0,0]]),

'-4- [010] : z, -y, -x' :
np.array([[0,0,1],
          [0,-1,0],
          [-1,0,0]]),

'3+ [-1-11] : -z, x, -y' :
np.array([[0,0,-1],
          [1,0,0],
          [0,-1,0]]),

'3- [-1-11] : y, -z, -x' :
np.array([[0,1,0],
          [0,0,-1],
          [-1,0,0]]),

'2 [011] : -x, z, y' :
np.array([[-1,0,0],
          [0,0,1],
          [0,1,0]]),

'2 [01-1] : -x, -z, -y' :
np.array([[-1,0,0],
          [0,0,-1],
          [0,-1,0]]),

'4+ [100] : x, -z, y' :
np.array([[1,0,0],
          [0,0,-1],
          [0,1,0]]),

'4- [100] : x, z, -y' :
np.array([[1,0,0],
          [0,0,1],
          [0,-1,0]]),

'm [100] : -x, y, z' :
np.array([[-1,0,0],
          [0,1,0],
          [0,0,1]]),

'-3+ [-1-11] : z, -x, y' :
np.array([[0,0,1],
          [-1,0,0],
          [0,1,0]]),

'-3- [-1-11] : -y, z, x' :
np.array([[0,-1,0],
          [0,0,1],
          [1,0,0]]),

'm [011] : x, -z, -y' :
np.array([[1,0,0],
          [0,0,-1],
          [0,-1,0]]),

'm [01-1] : x, z, y' :
np.array([[1,0,0],
          [0,0,1],
          [0,1,0]]),

'-4+ [100] : -x, z, -y' :
np.array([[-1,0,0],
          [0,0,1],
          [0,-1,0]]),

'-4- [100] : -x, -z, y' :
np.array([[-1,0,0],
          [0,0,-1],
          [0,1,0]]),

#Hexagonal System

'3+ [001] : -y, x-y, z' :
np.array([[0, -1, 0],
           [1, -1, 0],
           [0, 0, 1]]),

'6+ [001] : x-y, x, z' :
np.array([[1, -1, 0],
           [1, 0, 0],
           [0, 0, 1]]),

'2 [100] : x-y, -y, -z' :
np.array([[1, -1, 0],
           [0, -1, 0],
           [0, 0, -1]]),

'2 [120] : y-x, y, -z' :
np.array([[-1, 1, 0],
           [0, 1, 0],
           [0, 0, -1]]),

'-3+ [001] : y,y-x, -z' :
np.array([[0, 1, 0],
           [-1, 1, 0],
           [0, 0, -1]]),

'-6+ [001] : y-x, -x, -z' :
np.array([[-1, 1, 0],
           [-1, 0, 0],
           [0, 0, -1]]),

'm [100] : y-x,y,z' :
np.array([[-1, 1, 0],
           [0, 1, 0],
           [0, 0, 1]]),

'm [120] : y-x,y,z' :
np.array([[1, -1, 0],
           [0, -1, 0],
           [0, 0, 1]]),

'3- [001] : y-x,-x,z' :
np.array([[-1, 1, 0],
           [-1, 0, 0],
           [0, 0, 1]]),

'6- [001] : y,y-x,z' :
np.array([[0, 1, 0],
           [-1, 1, 0],
           [0, 0, 1]]),

'2 [010] : -x,y-x,-z' :
np.array([[-1, 0, 0],
           [-1, 1, 0],
           [0, 0, -1]]),

'2 [210] : x,x-y,-z' :
np.array([[1, 0, 0],
           [1, -1, 0],
           [0, 0, -1]]),

'3- [001] : x-y,x,-z' :
np.array([[1, -1, 0],
           [1, 0, 0],
           [0, 0, -1]]),

'6- [001] : -y,x-y,-z' :
np.array([[0, -1, 0],
           [1, -1, 0],
           [0, 0, -1]]),

'm [010] : x,x-y,z' :
np.array([[1, 0, 0],
           [1, -1, 0],
           [0, 0, 1]]),

'm [210] : -x,y-x,z' :
np.array([[-1, 0, 0],
           [-1, 1, 0],
           [0, 0, 1]])

}




translation_sym = [np.array([0, 0, 0]),
                   
                   #2_1 or 4_2 or 6_3
                   np.array([1./2, 0, 0]),
                   np.array([0, 1./2, 0]),
                   np.array([0, 0, 1./2]),
                   np.array([0, 1./2, 1./2]),
                   np.array([1./2, 0, 1./2]),
                   np.array([1./2, 1./2, 0]),
                   np.array([1./2, 1./2, 1./2]),
                   
                   #4_1
                   np.array([1./4, 0, 0]), 
                   np.array([0, 1./4, 0]), 
                   np.array([0, 0, 1./4]),
                   np.array([0, 1./4, 1./4]),
                   np.array([1./4, 0, 1./4]),
                   np.array([1./4, 1./4, 0]),
                   np.array([1./4, 1./4, 1./4]),
                   
                   #3_1 or 6_2
                   np.array([1./3, 0, 0]),
                   np.array([0, 1./3, 0]),
                   np.array([0, 0, 1./3]),
                   np.array([0, 1./3, 1./3]),
                   np.array([1./3, 0, 1./3]),
                   np.array([1./3, 1./3, 0]),
                   np.array([1./3, 1./3, 1./3]),
                   
                   #3-2 or 6_4
                   np.array([2./3, 0, 0]),
                   np.array([0, 2./3, 0]),
                   np.array([0, 0, 2./3]),
                   np.array([0, 2./3, 2./3]),
                   np.array([2./3, 0, 2./3]),
                   np.array([2./3, 2./3, 0]),
                   np.array([2./3, 2./3, 2./3]),
                   
                   #4_3
                   np.array([3./4, 0, 0]), 
                   np.array([0, 3./4, 0]), 
                   np.array([0, 0, 3./4]),
                   np.array([0, 3./4, 3./4]),
                   np.array([3./4, 0, 3./4]),
                   np.array([3./4, 3./4, 0]),
                   np.array([3./4, 3./4, 3./4]),
                   
                   
                   np.array([1./6, 0, 0]),
                   np.array([0, 1./6, 0]),
                    np.array([0, 0, 1./6]),
                    np.array([0, 1./6, 1./6]),
                    np.array([1./6, 0, 1./6]),
                    np.array([1./6, 1./6, 0]),
                    np.array([1./6, 1./6, 1./6]),
                    
                    
                    np.array([5./6, 0, 0]),
                    np.array([0, 5./6, 0]),
                    np.array([0, 0, 5./6]),
                    np.array([0, 5./6, 5./6]),
                    np.array([5./6, 0, 5./6]),
                    np.array([5./6, 5./6, 0]),
                    np.array([5./6, 5./6, 5./6]),
                    
                    
                    np.array([2./3, 1./3, 1./3]), 
                    np.array([1./3, 2./3, 2./3]),
                    np.array([2./3, 1./3, 0]), 
                    np.array([1./3, 2./3, 0])
                  ]

keys = []
r_sym = []
for i in range(len(translation_sym)):
    translation_sym[i] = translation_sym[i].reshape(3,1)
    for r in syms:
        op = syms[r]
        r = (r + ' ' + str(translation_sym[i].reshape(1,3)).replace(' [', '').replace('\n', ','))
        key = keys.append(r)
        m = np.hstack([op,translation_sym[i]])
        r_sym.append(m)


ops = dict(zip(keys,r_sym))

